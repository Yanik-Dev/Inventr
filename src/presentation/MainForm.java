/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import common.AppLogger;
import common.SocketConfiguration;
import org.springframework.context.ApplicationContext; 
import entity.User;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.ContainerAdapter;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.beans.PropertyVetoException;
import java.net.Socket;
import java.util.logging.Level;
import javax.swing.JFrame;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import org.springframework.beans.BeansException;
import org.springframework.context.support.ClassPathXmlApplicationContext;

/**
 *
 * @author Yanik
 */
public class MainForm extends javax.swing.JFrame {
    //Global Class declaration of forms/views

    ItemInternalFrame itemView = null;
    SupplierInternalFrame supplierView = null;
    DashboardInternalFrame dashboard = null;
    TransactionInternalFrame transFrame = null;
    UserInternalFrame userView =null;
    CategoryViewDialog categoryView = null;
    UnitViewDialog unitView =null;
    LocationViewDialog locationView = null;
    
    User _user = null;
    /**
     * Creates new form main
     */
    public MainForm() {
        initComponents();
        
       /* dashboard = new DashboardInternalFrame();
                 this.desktopPaneMain.add(dashboard);

         try {
            dashboard.setMaximum(true);
          } catch (PropertyVetoException e) {
            // Vetoed by internalFrame
            // ... possibly add some handling for this case
          }
         
        dashboard.setBorder(null);
        dashboard.setVisible(true);*/
    }
    
    public MainForm(User user) {
        initComponents();
        this._user = user;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPaneMain = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        transMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        inventoryMenu = new javax.swing.JMenu();
        itemMenuItem = new javax.swing.JMenuItem();
        supplierMenuItem = new javax.swing.JMenuItem();
        categoryMenuItem = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        systemMenu = new javax.swing.JMenu();
        userMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout desktopPaneMainLayout = new javax.swing.GroupLayout(desktopPaneMain);
        desktopPaneMain.setLayout(desktopPaneMainLayout);
        desktopPaneMainLayout.setHorizontalGroup(
            desktopPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1186, Short.MAX_VALUE)
        );
        desktopPaneMainLayout.setVerticalGroup(
            desktopPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 516, Short.MAX_VALUE)
        );

        menuBar.setBackground(new java.awt.Color(51, 51, 51));

        transMenu.setMnemonic('T');
        transMenu.setText("Transactions");
        transMenu.setToolTipText("View requests and receivable logs");
        transMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transMenuActionPerformed(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Logs");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        transMenu.add(jMenuItem1);

        menuBar.add(transMenu);

        inventoryMenu.setText("Inventory Management");

        itemMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        itemMenuItem.setText("Item Management");
        itemMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuItemActionPerformed(evt);
            }
        });
        inventoryMenu.add(itemMenuItem);

        supplierMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        supplierMenuItem.setText("Supplier Managment");
        supplierMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierMenuItemActionPerformed(evt);
            }
        });
        inventoryMenu.add(supplierMenuItem);

        categoryMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        categoryMenuItem.setMnemonic('C');
        categoryMenuItem.setText("Category Management");
        categoryMenuItem.setToolTipText("Manage categorues");
        categoryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryMenuItemActionPerformed(evt);
            }
        });
        inventoryMenu.add(categoryMenuItem);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Unit Management");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        inventoryMenu.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Storage Management");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        inventoryMenu.add(jMenuItem3);

        menuBar.add(inventoryMenu);

        systemMenu.setText("System Management");

        userMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        userMenuItem.setMnemonic('U');
        userMenuItem.setText("User Management");
        userMenuItem.setToolTipText("Create, update and delete Users");
        userMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userMenuItemActionPerformed(evt);
            }
        });
        systemMenu.add(userMenuItem);

        menuBar.add(systemMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPaneMain)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPaneMain, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuItemActionPerformed
        this.itemView = new ItemInternalFrame();
        disableMenu(true);
        this.itemView.addInternalFrameListener(new InternalFrameAdapter(){
             public void internalFrameClosed(InternalFrameEvent e) {
               disableMenu(false);
             }
         });
        this.desktopPaneMain.add(this.itemView);
        
        try {
            itemView.setMaximum(true);
          } catch (PropertyVetoException e) {
          }
        this.itemView.setBorder(null);
        this.itemView.setVisible(true);
    }//GEN-LAST:event_itemMenuItemActionPerformed

    private void categoryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryMenuItemActionPerformed
        categoryView = new CategoryViewDialog(this, true);
        disableMenu(true);
        this.categoryView.addWindowListener(new WindowAdapter()
            {
              public void windowClosed(WindowEvent e)
              {
                disableMenu(false);
                categoryView = null;
              }
        });
        categoryView.setLocationRelativeTo(null);
        categoryView.setVisible(true);
    }//GEN-LAST:event_categoryMenuItemActionPerformed

    private void supplierMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierMenuItemActionPerformed
        this.supplierView = new SupplierInternalFrame();
        disableMenu(true);
         this.supplierView.addInternalFrameListener(new InternalFrameAdapter(){
             public void internalFrameClosed(InternalFrameEvent e) {
               disableMenu(false);
             }
         });
        this.desktopPaneMain.add(this.supplierView);
        
        try {
            supplierView.setMaximum(true);
          } catch (PropertyVetoException e) {
          }
        this.supplierView.setBorder(null);
        this.supplierView.setVisible(true);
        
    }//GEN-LAST:event_supplierMenuItemActionPerformed

    private void transMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transMenuActionPerformed
      
    }//GEN-LAST:event_transMenuActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
         this.transFrame = new TransactionInternalFrame();
         disableMenu(true);
         this.transFrame.addInternalFrameListener(new InternalFrameAdapter(){
             public void internalFrameClosed(InternalFrameEvent e) {
               disableMenu(false);
             }
         });
        this.desktopPaneMain.add(this.transFrame);
        try {
            transFrame.setMaximum(true);
          } catch (PropertyVetoException e) {
            // Vetoed by internalFrame
            // ... possibly add some handling for this case
          }
        this.transFrame.setBorder(null);
        this.transFrame.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void userMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userMenuItemActionPerformed
        this.userView = new UserInternalFrame();
        disableMenu(true);
        this.userView.addInternalFrameListener(new InternalFrameAdapter(){
             public void internalFrameClosed(InternalFrameEvent e) {
               disableMenu(false);
             }
         });
        this.desktopPaneMain.add(this.userView);
        
        try {
            userView.setMaximum(true);
          } catch (PropertyVetoException e) {
          }
        this.userView.setBorder(null);
        this.userView.setVisible(true);
    }//GEN-LAST:event_userMenuItemActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.unitView = new UnitViewDialog(this, true);
        disableMenu(true);
        this.unitView.addWindowListener(new WindowAdapter()
            {
              public void windowClosed(WindowEvent e)
              {
                disableMenu(false);
                unitView = null;
              }
        });
        
        unitView.setLocationRelativeTo(null);
        unitView.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
       this.locationView = new LocationViewDialog(this, true);
        disableMenu(true);
        this.locationView.addWindowListener(new WindowAdapter()
            {
              public void windowClosed(WindowEvent e)
              {
                disableMenu(false);
                locationView = null;
              }
        });
        
        locationView.setLocationRelativeTo(null);
        locationView.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    
    public void disableMenu(boolean value){
        this.inventoryMenu.setEnabled(!value);
        this.transMenu.setEnabled(!value);
        this.systemMenu.setEnabled(!value);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainForm main = new MainForm();
                main.setExtendedState(JFrame.MAXIMIZED_BOTH);
                main.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem categoryMenuItem;
    private javax.swing.JDesktopPane desktopPaneMain;
    private javax.swing.JMenu inventoryMenu;
    private javax.swing.JMenuItem itemMenuItem;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem supplierMenuItem;
    private javax.swing.JMenu systemMenu;
    private javax.swing.JMenu transMenu;
    private javax.swing.JMenuItem userMenuItem;
    // End of variables declaration//GEN-END:variables
}
